<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Functional Statistics</title>
    <link>http://www.functionalstatistics.com/tags/r/</link>
    <description>Recent content in R on Functional Statistics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 10 Mar 2021 14:19:14 -0500</lastBuildDate><atom:link href="http://www.functionalstatistics.com/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>M-estimation in Julia</title>
      <link>http://www.functionalstatistics.com/posts/2021-03-10-julia-m-estimation/</link>
      <pubDate>Wed, 10 Mar 2021 14:19:14 -0500</pubDate>
      
      <guid>http://www.functionalstatistics.com/posts/2021-03-10-julia-m-estimation/</guid>
      <description>A goal of mine is to get up to speed with Catlab.jl, a Julia library for doing applied Category Theory. Since it’s written in Julia, I spent a bit of time getting hands-on Julia experience by toying around with something I know: M-estimation.
In this post, I code a stripped down Julia version of geex, an R package I created to give developers a straightforward way to create new M-estimators.</description>
    </item>
    
    <item>
      <title>Closing in on understanding R closures</title>
      <link>http://www.functionalstatistics.com/posts/2021-02-05-r-closure-size/</link>
      <pubDate>Tue, 02 Feb 2021 09:19:14 -0500</pubDate>
      
      <guid>http://www.functionalstatistics.com/posts/2021-02-05-r-closure-size/</guid>
      <description>A common and useful pattern I use in R programming is currying to create closures for later computation. This pattern is the main abstraction of my geex package, for example. At NoviSci we use closures all the time in data pipelines. I think of a closure as a function f that returns another function g, where the returned g function (hopefully) has the data necessary to do its computation:</description>
    </item>
    
    <item>
      <title>Creating a Plasmode Simulator for Comparing Causal Estimators with Spatial Interference</title>
      <link>http://www.functionalstatistics.com/posts/2021-01-27-plasmode-simulations-for-causal-estimators/</link>
      <pubDate>Wed, 27 Jan 2021 09:19:14 -0500</pubDate>
      
      <guid>http://www.functionalstatistics.com/posts/2021-01-27-plasmode-simulations-for-causal-estimators/</guid>
      <description>Most statistical methods papers include simulations to check the operating characteristics of the proposed methods. Data generating mechanisms for these simulations are often contrived as mixtures from known parametric distributions. While these simulators do the job, in this post, I demonstrate a simulation technique designed to increase the versimilitude to the study data actually collected. I’ve used this approach in the past, but only recently learned a name for it: plasmode simulation.</description>
    </item>
    
  </channel>
</rss>
